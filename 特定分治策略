#include <iostream>
#define MAX 128
using namespace std;

void quickSort(int a[], int left, int right) {
	int pivot, i, j;
	int temp;
	if (left < right){
		i = left; j = right + 1;
		pivot = a[left];
		do {
			do {
				i++;
			} while (a[i] < pivot);
			do {
				j--;
			} while (a[j] > pivot);
			if (i < j) {
				int temp;
				temp = a[i];
				a[i] = a[j];
				a[j] = temp;
			}
		} while (i < j);
		int temp;
		temp = a[left];
		a[left] = a[j];
		a[j] = temp;
		quickSort(a, left, j - 1);
		quickSort(a, j + 1, right);
	}
}

int Select(int a[], int start, int end, int k) {
	int m = 0;
	int s[MAX];
	int i = start;
	while (i <= end) {
		int iend = i + 4;
		if (iend >= end) iend = end;
		quickSort(a, i, iend);
		s[m] = a[(i + iend) / 2];
		m++;
		i = iend + 1;
	}
	quickSort(s, 0, m - 1);
	int mid = s[m / 2];
	int al[MAX], ar[MAX];
	int count_al = 0, count_ar = 0;
	for (int j = start; j <= end; j++)
	{
		if (a[j] < mid)
			al[count_al++] = a[j];
		else if (a[j] > mid)
			ar[count_ar++] = a[j];
	}
	if (k == count_al + 1)
		return mid;
	else if (k <= count_al)
		return Select(al, 0, count_al - 1, k);
	else
		return Select(ar, 0, count_ar - 1, k - count_al - 1);
}

int main()
{
	int a[MAX];
	int n, k;
	scanf_s("%d", &n);
	for (int i = 0; i < n; i++)
	{
		scanf_s("%d", &a[i]);
	}
	scanf_s("%d", &k);
	printf_s("%d", Select(a, 0, n - 1, k));
}
